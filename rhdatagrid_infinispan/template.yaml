apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rhdatagrid-infinispan-instance
  title: MongoDB Atlas
  description: Build a Red Hat Data Grid infinispan instance in a specific namespace
  tags:
    - self-service
    - workshop
spec:
  owner: architecture-team
  type: opeator-instance
  parameters:
    - title: Provide information about the new component
      required:
        - cluster_id
        - namespace
        - component_id
      properties:
        cluster_id:
          title: Select environments
          type: array
          items:
            type: string
            enum:
              - .apps.cluster-qa.qa.sandboxxx.opentlc.com
              - .apps.cluster-aaaa.aaaa.sandboxxxxx.opentlc.com
            enumNames:
              - qa-cluster-infra
              - dev-cluster-infra
          uniqueItems: true
          ui:widget: checkboxes
        namespace: 
          title: Namespace
          type: string
          description: Namespace
          default: infinispan
        component_id:
          title: Component ID
          default: infinispan
          type: string
          description: Comp Id
  steps:
    - id: templateSource
      name: Generating the source code component
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: ./source
        values:
          owner: ${{ user.entity.metadata.name }}
          cluster_id: ${{parameters.cluster_id}}
          namespace: ${{parameters.namespace}}
          component_id: ${{parameters.component_id}}
          host: gitlab-gitlab.apps.cluster-aaaa.aaaa.sandboxxxxx.opentlc.com
          repoName: ${{parameters.component_id}}
          user_id: ${{ user.entity.metadata.name }}
          destination: ${{ user.entity.metadata.name }}/${{ parameters.component_id }}
    - id: publishSource
      name: Publishing to Source Code Repository
      action: publish:gitlab
      input:
        sourcePath: ./source
        description: ${{parameters.description}}
        repoUrl: gitlab-gitlab.apps.cluster-aaaa.aaaa.sandboxxxxx.opentlc.com?owner=${{ user.entity.metadata.name }}&repo=${{parameters.component_id}}
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public    
    - id: registerSource
      name: Registering the Source Code Component
      action: catalog:register
      input:
        repoContentsUrl: ${{steps.publishSource.output.repoContentsUrl}}
        catalogInfoPath: /catalog-info.yaml
    - id: templateGitops
      name: Generating the deployment resources and artefacts
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{parameters.component_id}}
          description: ${{parameters.description}}
          destination:  https://gitlab-gitlab.apps.cluster-aaaa.aaaa.sandboxxxxx.opentlc.com/${{ user.entity.metadata.name }}/${{parameters.component_id}}-gitops.git
          source_repository: https://gitlab-gitlab.apps.cluster-aaaa.aaaa.sandboxxxxx.opentlc.com/${{ user.entity.metadata.name }}}/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_host: gitlab-gitlab.apps.cluster-aaaa.aaaa.sandboxxxxx.opentlc.com
          cluster: ${{parameters.cluster_id}}
          namespace: ${{parameters.namespace}}
          user_id: ${{ user.entity.metadata.name }}
        targetPath: ./tenant-gitops
    - id: publishGitops
      name: Publishing to Deployment Resource Repository
      action: publish:gitlab
      input:
        repoUrl: gitlab-gitlab.apps.cluster-aaaa.aaaa.sandboxxxxx.opentlc.com?owner=${{ user.entity.metadata.name }}&repo=${{parameters.component_id}}-gitops
        title: gitops resources for ${{parameters.namespace}}-gitops
        description: gitops resources for ${{parameters.namespace}}-gitops
        sourcePath: ./tenant-gitops
        defaultBranch: main
        protectDefaultBranch: false
        repoVisibility: public
    - id: createArgoResources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{parameters.component_id}}-gitops
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://gitlab-gitlab.apps.cluster-aaaa.aaaa.sandboxxxxx.opentlc.com/${{ user.entity.metadata.name }}/${{parameters.component_id}}-gitops.git
        path: 'argocd/'
  output:
    links:
      - title: Source Code Repository
        url: ${{steps.publishSource.output.remoteUrl}}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{steps.registerSource.output.entityRef}}
